FROM nvidia/cuda:11.7.1-devel-ubuntu20.04

# set shell to run other commands
SHELL ["/bin/bash", "-c"]

# Install sudo for the user
RUN apt update && apt install -y \
    sudo \
    python3 \
    python3-pip \
    python3-dev \
    python3-setuptools \
    apt-utils \
    bash-completion \
    acl \
    wget \
    git \
    curl

RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

# ---------------------------------------------------------------------------- #
#                            Install python packages                           #
# ---------------------------------------------------------------------------- #
# updating alternatives to use python3 and pip3
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1
    
# Installing python packages
RUN pip install pip install torch==1.8.1+cu111 torchvision==0.9.1+cu111 torchaudio==0.8.1 kornia open3d pyquaternion catkin_pkg nose transforms3d easydict -f https://download.pytorch.org/whl/torch_stable.html

# ---------------------------------------------------------------------------- #
#                         Build ROS2 humble from source                        #
# ---------------------------------------------------------------------------- #
RUN apt install -y locales && \
    locale-gen en_US en_US.UTF-8 && \
    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 && \
    echo "export LANG=en_US.UTF-8" >> ~/.bashrc
ENV LANG=en_US.UTF-8

RUN apt install -y software-properties-common && \
    add-apt-repository universe && \
    apt update && \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null && \
    apt update && apt upgrade -y && \
    apt install -y ros-foxy-desktop python3-argcomplete ros-dev-tools

RUN apt install -y ros-foxy-rmw-cyclonedds-cpp

# ---------------------------------------------------------------------------- #
#                              OpenPCDet Workspace                             #
# ---------------------------------------------------------------------------- #
WORKDIR /root/OpenPCDet
COPY training/pcdet pcdet
COPY training/tools tools
COPY ["training/setup.py", "training/requirements.txt", "/root/OpenPCDet/"]

RUN pip install -r requirements.txt
#---------------------------------------------------------------------------- #
#                               ROS2 Workspace                                #
#---------------------------------------------------------------------------- #
# Copy the ROS2 workspace folder to the container
WORKDIR /root/ros2_ws
COPY ros2_ws .

# Install ROS2 dependencies
RUN rosdep init && rosdep update
RUN rosdep install --from-paths src --ignore-src -r -y
RUN apt install -y ros-foxy-ament-cmake-nose ros-foxy-vision-msgs ros-foxy-tf-transformations ros-foxy-nav2-common
RUN pip install install nose transforms3d
# Build the ROS2 workspace
RUN . /opt/ros/foxy/setup.bash && \
    colcon build --symlink-install

WORKDIR /root/
COPY docker/entrypoints/inference.sh .

ENTRYPOINT [ "/root/inference.sh", "-l" ]